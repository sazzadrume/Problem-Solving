#include <bits/stdc++.h>

using namespace std;

int main()
{
	int tt = 1;
	// cin >> tt;

	// int a[210] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44, 55, 66, 77, 88, 99, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 202, 212, 222, 232, 242, 252, 262, 272, 282, 292, 303, 313, 323, 333, 343, 353, 363, 373, 383, 393, 404, 414, 424, 434, 444, 454, 464, 474, 484, 494, 505, 515, 525, 535, 545, 555, 565, 575, 585, 595, 606, 616, 626, 636, 646, 656, 666, 676, 686, 696, 707, 717, 727, 737, 747, 757, 767, 777, 787, 797, 808, 818, 828, 838, 848, 858, 868, 878, 888, 898, 909, 919, 929, 939, 949, 959, 969, 979, 989, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 11011, 11111, 11211, 11311, 11411, 11511, 11611, 11711, 11811, 11911, 22022, 22122, 22222, 22322, 22422, 22522, 22622, 22722, 22822, 22922, 33033, 33133, 33233, 33333, 33433, 33533, 33633, 33733, 33833, 33933, 44044, 44144, 44244, 44344, 44444, 44544, 44644, 44744, 44844, 44944, 55055, 55155, 55255, 55355, 55455, 55555, 55655, 55755, 55855, 55955, 66066, 66166, 66266, 66366, 66466, 66566, 66666, 66766, 66866, 66966, 77077, 77177, 77277, 77377, 77477, 77577, 77677, 77777, 77877, 77977, 88088, 88188, 88288, 88388, 88488, 88588, 88688, 88788, 88888, 88988, 99099, 99199, 99299, 99399, 99499, 99599, 99699, 99799, 99899, 99999, 101101, 111111};

	while (tt--) {
		int n;
		cin >> n;

		string p;
		cin >> p;

		string ans = "";

		int found_nine_at_first = p[0];

		if (found_nine_at_first == '9') {

			reverse(p.begin(), p.end());

			int x = (p[0] - '0');

			int current_value = 11 - x;

			ans += (current_value + '0');

			for (int i = 1; i < n; ++i)
			{

				if (p[i - 1] == '9') {

					int x = (p[i] - '0');

					if(x == 0){
						x = 10
					}
					else if (x < 2) {
						x = 10 + x;
					}

					int current_value = abs(10 - x);

					ans += (current_value + '0');
				}
				else {
					int x = (p[i] - '0');

					if(x == 0){
						x = 10
					}
					else if (x < 2) {
						x = 10 + x;
					}

					int current_value = abs(11 - x);

					ans += (current_value + '0');
				}

				reverse(ans.begin(), ans.end());
			}
		}
		else {
			for (int i = 0; i < n; ++i)
			{
				ans += ((9 - (p[i] - '0')) + '0');
			}
		}

		int c = 0;

		for (int i = 0; i < ans.size(); i++) {
			if (ans[i] == '0') {
				c++;
			}
			else {
				break;
			}
		}

		string final_answer = "";

		for (int i = c; i < ans.size(); ++i)
		{
			final_answer += ans[i];
		}

		cout << final_answer << '\n';
	}
}